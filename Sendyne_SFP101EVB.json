[
    {
        "id": "72163381.912c4c",
        "type": "tab",
        "label": "sfp101evb",
        "disabled": false,
        "info": ""
    },
    {
        "id": "32d40ba8.a361a4",
        "type": "inject",
        "z": "72163381.912c4c",
        "name": "cur_out",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "20.1",
        "topic": "",
        "payload": "[130,50]",
        "payloadType": "bin",
        "x": 240,
        "y": 320,
        "wires": [
            [
                "473d7e8b.45a41"
            ]
        ]
    },
    {
        "id": "30af04d3.97883c",
        "type": "debug",
        "z": "72163381.912c4c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1290,
        "y": 320,
        "wires": []
    },
    {
        "id": "473d7e8b.45a41",
        "type": "serial request",
        "z": "72163381.912c4c",
        "name": "",
        "serial": "d3226563.1cf1c8",
        "x": 500,
        "y": 320,
        "wires": [
            [
                "fe712513.c857f8"
            ]
        ]
    },
    {
        "id": "fe712513.c857f8",
        "type": "function",
        "z": "72163381.912c4c",
        "name": "Parse",
        "func": "//cur_out\nconst CUR_S = 0x40;\n\nvar body = msg.payload;\nif(body[0] != CUR_S){\n    return null;\n}\n\nvar current = body[3] << 16 |\n              body[2] << 8 |\n              body[1];\nif (current & 0x800000) {\n    current = -((current ^ 0xFFFFFF) + 1);\n}\ncurrent *= 0.00006119;\n\nmsg.payload = { current: current };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 320,
        "wires": [
            [
                "a2b93074.af3ad"
            ]
        ]
    },
    {
        "id": "5c0f77cb.2ad218",
        "type": "inject",
        "z": "72163381.912c4c",
        "name": "volt_out",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "20.2",
        "topic": "",
        "payload": "[130,82]",
        "payloadType": "bin",
        "x": 240,
        "y": 400,
        "wires": [
            [
                "22a98502.8c645a"
            ]
        ]
    },
    {
        "id": "22a98502.8c645a",
        "type": "serial request",
        "z": "72163381.912c4c",
        "name": "",
        "serial": "d3226563.1cf1c8",
        "x": 500,
        "y": 400,
        "wires": [
            [
                "e7392f33.588c1"
            ]
        ]
    },
    {
        "id": "e7392f33.588c1",
        "type": "function",
        "z": "72163381.912c4c",
        "name": "Parse",
        "func": "//cur_out\nconst VOLT_S = 0x80;\n\nvar body = msg.payload;\nif(body[0] != VOLT_S){\n    return null;\n}\n\nvar voltage = body[3] << 16 |\n              body[2] << 8 |\n              body[1];\nif (voltage & 0x800000) {\n    voltage = -((voltage ^ 0xFFFFFF) + 1);\n}\nvoltage *= 0.0000288;\n\nmsg.payload = { voltage: voltage };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 400,
        "wires": [
            [
                "c58a1d18.7aaaa"
            ]
        ]
    },
    {
        "id": "19f9f9b9.b868f6",
        "type": "inject",
        "z": "72163381.912c4c",
        "name": "cur_acc",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "20.3",
        "topic": "",
        "payload": "[131,55]",
        "payloadType": "bin",
        "x": 240,
        "y": 480,
        "wires": [
            [
                "44d810db.eea89"
            ]
        ]
    },
    {
        "id": "c752fe73.5d5c3",
        "type": "inject",
        "z": "72163381.912c4c",
        "name": "charge_acc",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "20.4",
        "topic": "",
        "payload": "[131,194]",
        "payloadType": "bin",
        "x": 250,
        "y": 560,
        "wires": [
            [
                "d7331cfc.19934"
            ]
        ]
    },
    {
        "id": "ee133a61.829258",
        "type": "inject",
        "z": "72163381.912c4c",
        "name": "dis_acc",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "20.5",
        "topic": "",
        "payload": "[131,202]",
        "payloadType": "bin",
        "x": 240,
        "y": 640,
        "wires": [
            [
                "a347d34.b43d23"
            ]
        ]
    },
    {
        "id": "44d810db.eea89",
        "type": "serial request",
        "z": "72163381.912c4c",
        "name": "",
        "serial": "d3226563.1cf1c8",
        "x": 500,
        "y": 480,
        "wires": [
            [
                "b15edb80.1663f8",
                "202482c3.fd134e"
            ]
        ]
    },
    {
        "id": "d7331cfc.19934",
        "type": "serial request",
        "z": "72163381.912c4c",
        "name": "",
        "serial": "d3226563.1cf1c8",
        "x": 500,
        "y": 560,
        "wires": [
            [
                "fdd3c466.7944c8"
            ]
        ]
    },
    {
        "id": "a347d34.b43d23",
        "type": "serial request",
        "z": "72163381.912c4c",
        "name": "",
        "serial": "d3226563.1cf1c8",
        "x": 500,
        "y": 640,
        "wires": [
            [
                "2263b4de.bab7bc"
            ]
        ]
    },
    {
        "id": "710bc958.a88058",
        "type": "inject",
        "z": "72163381.912c4c",
        "name": "temp0_r_c",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "20.6",
        "topic": "",
        "payload": "[130,153]",
        "payloadType": "bin",
        "x": 250,
        "y": 720,
        "wires": [
            [
                "7fb6f409.9344cc"
            ]
        ]
    },
    {
        "id": "7fb6f409.9344cc",
        "type": "serial request",
        "z": "72163381.912c4c",
        "name": "",
        "serial": "d3226563.1cf1c8",
        "x": 500,
        "y": 720,
        "wires": [
            [
                "baf232ca.c9691"
            ]
        ]
    },
    {
        "id": "b15edb80.1663f8",
        "type": "function",
        "z": "72163381.912c4c",
        "name": "Parse",
        "func": "//cur_acc\nconst CUR_S = 0x40;\nconst BATTERY_AMP_HOURS = 280.0;\nvar soc_old = flow.get(\"soc\") || 100.0;\nvar old_full_acc = flow.get(\"full_acc\") || 0;\nvar full_acc = old_full_acc;\nnode.warn([\"soc_old=\",soc_old]);\nnode.warn([\"old_full_acc=\",old_full_acc]);\n\nvar body = msg.payload;\nif(body[0] != CUR_S){\n    return null;\n}\n\nif(body[6] < 0x80) {\n    var cur_acc =   body[6] * 0x10000000000 +\n                    body[5] * 0x100000000 +\n                    body[4] * 0x1000000 +\n                    body[3] * 0x10000 +\n                    body[2] * 0x100 + \n                    body[1];\n}\nelse {\n    body[6] = body[6] ^ 0xff;\n    body[5] = body[5] ^ 0xff;\n    body[4] = body[4] ^ 0xff;\n    body[3] = body[3] ^ 0xff;\n    body[2] = body[2] ^ 0xff;\n    body[1] = body[1] ^ 0xff;\n\n    cur_acc =   body[6] * 0x10000000000 +\n                body[5] * 0x100000000 +\n                body[4] * 0x1000000 +\n                body[3] * 0x10000 +\n                body[2] * 0x100 + \n                body[1];\n    cur_acc = -(cur_acc + 1); \n}\n\n//node.warn([\"cur_acc=\",cur_acc]);\n\ndelta_acc = cur_acc - old_full_acc;\namp_hours = BATTERY_AMP_HOURS - (delta_acc * 76.49e-9 * 65536 / 60 / 60);\n//node.warn([\"delta_acc=\",delta_acc]);\n//node.warn([\"amp_hours=\",amp_hours]);\n\n\n\nif(amp_hours > BATTERY_AMP_HOURS){\n    amp_hours = BATTERY_AMP_HOURS;\n    full_acc = cur_acc;\n}\n\nsoc = amp_hours / BATTERY_AMP_HOURS * 100.0;\n//node.warn([\"soc= \",soc]);\n\nif(old_full_acc == 0){\n    soc = soc_old;\n    cal_amp_hours = BATTERY_AMP_HOURS * soc_old / 100.0;\n    full_acc = cur_acc - (BATTERY_AMP_HOURS - cal_amp_hours) / (76.49e-9 * 65536 / 60 / 60)\n    node.warn([\"soc= \",soc]);\n\n}\n\n\n//msg.payload = { delta_acc: delta_acc };\nmsg.payload = { soc: soc };\nflow.set(\"soc\",soc);\nflow.set(\"full_acc\",full_acc);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 670,
        "y": 480,
        "wires": [
            [
                "c54e3dd7.e8fa6"
            ]
        ]
    },
    {
        "id": "fdd3c466.7944c8",
        "type": "function",
        "z": "72163381.912c4c",
        "name": "Parse",
        "func": "//charge_acc\nconst CUR_S = 0x40;\n\nvar body = msg.payload;\nif(body[0] != CUR_S){\n    return null;\n}\n\nif(body[6] < 0x80) {\n    var charge_acc =   body[6] * 0x10000000000 +\n                    body[5] * 0x100000000 +\n                    body[4] * 0x1000000 +\n                    body[3] * 0x10000 +\n                    body[2] * 0x100 + \n                    body[1];\n}\nelse {\n    body[6] = body[6] ^ 0xff;\n    body[5] = body[5] ^ 0xff;\n    body[4] = body[4] ^ 0xff;\n    body[3] = body[3] ^ 0xff;\n    body[2] = body[2] ^ 0xff;\n    body[1] = body[1] ^ 0xff;\n\n    charge_acc =   body[6] * 0x10000000000 +\n                body[5] * 0x100000000 +\n                body[4] * 0x1000000 +\n                body[3] * 0x10000 +\n                body[2] * 0x100 + \n                body[1];\n    charge_acc = -(charge_acc + 1); \n}\n\n\nmsg.payload = { charge_acc: charge_acc };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 560,
        "wires": [
            [
                "1eb4fe3d.c30842"
            ]
        ]
    },
    {
        "id": "2263b4de.bab7bc",
        "type": "function",
        "z": "72163381.912c4c",
        "name": "Parse",
        "func": "//dis_acc\nconst CUR_S = 0x40;\n\nvar body = msg.payload;\nif(body[0] != CUR_S){\n    return null;\n}\n\nif(body[6] < 0x80) {\n    var dis_acc =   body[6] * 0x10000000000 +\n                    body[5] * 0x100000000 +\n                    body[4] * 0x1000000 +\n                    body[3] * 0x10000 +\n                    body[2] * 0x100 + \n                    body[1];\n}\nelse {\n    body[6] = body[6] ^ 0xff;\n    body[5] = body[5] ^ 0xff;\n    body[4] = body[4] ^ 0xff;\n    body[3] = body[3] ^ 0xff;\n    body[2] = body[2] ^ 0xff;\n    body[1] = body[1] ^ 0xff;\n\n    dis_acc =   body[6] * 0x10000000000 +\n                body[5] * 0x100000000 +\n                body[4] * 0x1000000 +\n                body[3] * 0x10000 +\n                body[2] * 0x100 + \n                body[1];\n    dis_acc = -(dis_acc + 1); \n}\n\n\nmsg.payload = { dis_acc: dis_acc };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 640,
        "wires": [
            [
                "7c280f50.291aa"
            ]
        ]
    },
    {
        "id": "baf232ca.c9691",
        "type": "function",
        "z": "72163381.912c4c",
        "name": "Parse",
        "func": "//temp0_r_c\nconst TEMP_S = 192;\n\nvar body = msg.payload;\nif(body[0] != TEMP_S){\n    return null;\n}\n\nvar temp_r_c = body[3] << 16 |\n               body[2] << 8 |\n               body[1];\nif (temp_r_c & 0x800000) {\n    temp_r_c = -((temp_r_c ^ 0xFFFFFF) + 1);\n}\ntemp_r_c /= 32768;\n\nmsg.payload = { temp_r_c: temp_r_c };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 720,
        "wires": [
            [
                "3d8236bf.006afa"
            ]
        ]
    },
    {
        "id": "a2b93074.af3ad",
        "type": "function",
        "z": "72163381.912c4c",
        "name": "HTTP Request Builder",
        "func": "data = msg.payload;\nfields = [\n    \"LoadCurrent LoadCurrent=\" + data.current,\n];\nmsg.payload = fields.join();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 320,
        "wires": [
            [
                "eb1313e6.c5279"
            ]
        ]
    },
    {
        "id": "eb1313e6.c5279",
        "type": "http request",
        "z": "72163381.912c4c",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://localhost:8086/write?db=sfp101evb",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "basic",
        "x": 1130,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "c58a1d18.7aaaa",
        "type": "function",
        "z": "72163381.912c4c",
        "name": "HTTP Request Builder",
        "func": "data = msg.payload;\nfields = [\n    \"BatteryVoltage BatteryVoltage=\" + data.voltage,\n];\nmsg.payload = fields.join();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 400,
        "wires": [
            [
                "eb1313e6.c5279"
            ]
        ]
    },
    {
        "id": "c54e3dd7.e8fa6",
        "type": "function",
        "z": "72163381.912c4c",
        "name": "HTTP Request Builder",
        "func": "data = msg.payload;\nfields = [\n    \"soc soc=\" + data.soc,\n];\nmsg.payload = fields.join();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 480,
        "wires": [
            [
                "eb1313e6.c5279"
            ]
        ]
    },
    {
        "id": "1eb4fe3d.c30842",
        "type": "function",
        "z": "72163381.912c4c",
        "name": "HTTP Request Builder",
        "func": "data = msg.payload;\nfields = [\n    \"charge_acc charge_acc=\" + data.charge_acc,\n];\nmsg.payload = fields.join();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 560,
        "wires": [
            [
                "eb1313e6.c5279"
            ]
        ]
    },
    {
        "id": "7c280f50.291aa",
        "type": "function",
        "z": "72163381.912c4c",
        "name": "HTTP Request Builder",
        "func": "data = msg.payload;\nfields = [\n    \"dis_acc dis_acc=\" + data.dis_acc,\n];\nmsg.payload = fields.join();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 640,
        "wires": [
            [
                "eb1313e6.c5279"
            ]
        ]
    },
    {
        "id": "3d8236bf.006afa",
        "type": "function",
        "z": "72163381.912c4c",
        "name": "HTTP Request Builder",
        "func": "data = msg.payload;\nfields = [\n    \"BatteryTemperature BatteryTemperature=\" + data.temp_r_c,\n];\nmsg.payload = fields.join();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 720,
        "wires": [
            [
                "eb1313e6.c5279"
            ]
        ]
    },
    {
        "id": "202482c3.fd134e",
        "type": "function",
        "z": "72163381.912c4c",
        "name": "Parse",
        "func": "//cur_acc\nconst CUR_S = 0x40;\n\nvar body = msg.payload;\nif(body[0] != CUR_S){\n    return null;\n}\n\nif(body[6] < 0x80) {\n    var cur_acc =   body[6] * 0x10000000000 +\n                    body[5] * 0x100000000 +\n                    body[4] * 0x1000000 +\n                    body[3] * 0x10000 +\n                    body[2] * 0x100 + \n                    body[1];\n}\nelse {\n    body[6] = body[6] ^ 0xff;\n    body[5] = body[5] ^ 0xff;\n    body[4] = body[4] ^ 0xff;\n    body[3] = body[3] ^ 0xff;\n    body[2] = body[2] ^ 0xff;\n    body[1] = body[1] ^ 0xff;\n\n    cur_acc =   body[6] * 0x10000000000 +\n                body[5] * 0x100000000 +\n                body[4] * 0x1000000 +\n                body[3] * 0x10000 +\n                body[2] * 0x100 + \n                body[1];\n    cur_acc = -(cur_acc + 1); \n}\n\n\nmsg.payload = { cur_acc: cur_acc };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 520,
        "wires": [
            [
                "16456e18.b163f2"
            ]
        ]
    },
    {
        "id": "16456e18.b163f2",
        "type": "function",
        "z": "72163381.912c4c",
        "name": "HTTP Request Builder",
        "func": "data = msg.payload;\nfields = [\n    \"cur_acc cur_acc=\" + data.cur_acc,\n];\nmsg.payload = fields.join();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 520,
        "wires": [
            [
                "eb1313e6.c5279"
            ]
        ]
    },
    {
        "id": "bd6e6d16.61c77",
        "type": "inject",
        "z": "72163381.912c4c",
        "name": "test",
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": ".7",
        "topic": "",
        "payload": "[255,255,255,255,255,128]",
        "payloadType": "bin",
        "x": 190,
        "y": 780,
        "wires": [
            [
                "61dbfb96.7f7e54"
            ]
        ]
    },
    {
        "id": "61dbfb96.7f7e54",
        "type": "function",
        "z": "72163381.912c4c",
        "name": "Parse",
        "func": "//test\nvar body = msg.payload;\n\n\nif(body[5] < 0x80) {\n    var test =  body[5] * 0x10000000000 +\n                body[4] * 0x100000000 +\n                body[3] * 0x1000000 +\n                body[2] * 0x10000 +\n                body[1] * 0x100 + \n                body[0];\n}\nelse {\n    body[5] = body[5] ^ 0xff;\n    body[4] = body[4] ^ 0xff;\n    body[3] = body[3] ^ 0xff;\n    body[2] = body[2] ^ 0xff;\n    body[1] = body[1] ^ 0xff;\n    body[0] = body[0] ^ 0xff;\n\n    test =  body[5] * 0x10000000000 +\n                body[4] * 0x100000000 +\n                body[3] * 0x1000000 +\n                body[2] * 0x10000 +\n                body[1] * 0x100 + \n                body[0];\n    test = -(test + 1); \n}\n\n//if (test & 0x8000000000) {\n//    test = -((test ^       0xFFFFFFFFFF) + 1);\n//}\n\nmsg.payload = { test: test };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "f105e061.4c534",
        "type": "influxdb in",
        "z": "72163381.912c4c",
        "influxdb": "597b3972.aebc78",
        "name": "",
        "query": "select * from soc ORDER BY desc LIMIT 1",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "x": 650,
        "y": 200,
        "wires": [
            [
                "ce0db49c.128f58"
            ]
        ]
    },
    {
        "id": "f468e58.2d2d718",
        "type": "inject",
        "z": "72163381.912c4c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "20",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 220,
        "wires": [
            [
                "f105e061.4c534"
            ]
        ]
    },
    {
        "id": "ce0db49c.128f58",
        "type": "function",
        "z": "72163381.912c4c",
        "name": "",
        "func": "msg.payload = Number(msg.payload[0].soc);\nvar soc = msg.payload;\nvar soc1 = soc;\nnode.warn([\"soc1=\",soc1]);\nflow.set(\"soc\",soc1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1080,
        "y": 200,
        "wires": [
            [
                "30af04d3.97883c"
            ]
        ]
    },
    {
        "id": "d3226563.1cf1c8",
        "type": "serial-port",
        "z": "",
        "serialport": "/dev/ttySFP101EVB",
        "serialbaud": "19200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "80",
        "bin": "bin",
        "out": "interbyte",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "597b3972.aebc78",
        "type": "influxdb",
        "z": "",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "sfp101evb",
        "name": "",
        "usetls": false,
        "tls": ""
    }
]