[
    {
        "id": "5d2cdab.b6afe24",
        "type": "tab",
        "label": "BMS",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1ef306b5.518009",
        "type": "inject",
        "z": "5d2cdab.b6afe24",
        "name": "Read basic info",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[\"0xDD\",\"0xA5\",\"0x03\",\"0x00\",\"0xFF\",\"0xFD\",\"0x77\"]",
        "payloadType": "bin",
        "x": 830,
        "y": 500,
        "wires": [
            [
                "eabf5f.91c5b0a"
            ]
        ]
    },
    {
        "id": "a2987c2b.e7ae5",
        "type": "inject",
        "z": "5d2cdab.b6afe24",
        "name": "Read battery cell voltage",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.2",
        "topic": "",
        "payload": "[\"0xDD\",\"0xA5\",\"0x04\",\"0x00\",\"0xFF\",\"0xFC\",\"0x77\"]",
        "payloadType": "bin",
        "x": 230,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "366ea7e1.743578",
        "type": "inject",
        "z": "5d2cdab.b6afe24",
        "name": "Write enter factory mode",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.3",
        "topic": "",
        "payload": "[\"0xDD\",\"0x5A\",\"0x00\",\"0x02\",\"0x56\",\"0x78\",\"0xFF\",\"0x30\",\"0x77\"]",
        "payloadType": "bin",
        "x": 230,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "dfe034e1.b003b8",
        "type": "inject",
        "z": "5d2cdab.b6afe24",
        "name": "Read eeprom address 0x10 (must be in factory mode)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.4",
        "topic": "",
        "payload": "[\"0xDD\",\"0xA5\",\"0x10\",\"0x00\",\"0xFF\",\"0xF0\",\"0x77\"]",
        "payloadType": "bin",
        "x": 320,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "8d9de1a.d9c422",
        "type": "inject",
        "z": "5d2cdab.b6afe24",
        "name": "Read eeprom address 0x10 (must be in factory mode)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "[\"0xDD\",\"0x10\",\"0x00\",\"0x02\",\"0x07\",\"0xD0\",\"0xFF\",\"0x27\",\"0x77\"]",
        "payloadType": "bin",
        "x": 320,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "9cad54f3.26f078",
        "type": "inject",
        "z": "5d2cdab.b6afe24",
        "name": "Read basic info, battery cell voltage, hardware version",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "[\"0xDD\",\"0xA5\",\"0x03\",\"0x00\",\"0xFF\",\"0xFD\",\"0x77\",\"0xDD\",\"0xA5\",\"0x04\",\"0x00\",\"0xFF\",\"0xFC\",\"0x77\",\"0xDD\",\"0xA5\",\"0x05\",\"0x00\",\"0xFF\",\"0xFB\",\"0x77\"]",
        "payloadType": "bin",
        "x": 320,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "e797efd0.63eac",
        "type": "inject",
        "z": "5d2cdab.b6afe24",
        "name": "Read protection board version number",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.2",
        "topic": "",
        "payload": "[\"0xDD\",\"0xA5\",\"0x05\",\"0x00\",\"0xFF\",\"0xFB\",\"0x77\"]",
        "payloadType": "bin",
        "x": 270,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "eabf5f.91c5b0a",
        "type": "serial request",
        "z": "5d2cdab.b6afe24",
        "name": "",
        "serial": "a11669f4.d68478",
        "x": 1130,
        "y": 500,
        "wires": [
            [
                "b4d9a35b.02f6f"
            ]
        ]
    },
    {
        "id": "b4d9a35b.02f6f",
        "type": "switch",
        "z": "5d2cdab.b6afe24",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "istype",
                "v": "undefined",
                "vt": "undefined"
            },
            {
                "t": "istype",
                "v": "buffer",
                "vt": "buffer"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1030,
        "y": 620,
        "wires": [
            [
                "25c1e60a.286bea"
            ],
            [
                "9e4453cb.f9f23",
                "e01c5fb5.7e9f2"
            ]
        ]
    },
    {
        "id": "4f15578e.becc08",
        "type": "delay",
        "z": "5d2cdab.b6afe24",
        "name": "",
        "pauseType": "delay",
        "timeout": "60",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1010,
        "y": 760,
        "wires": [
            [
                "9ff0269.ae421d8"
            ]
        ]
    },
    {
        "id": "25c1e60a.286bea",
        "type": "change",
        "z": "5d2cdab.b6afe24",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[\"0xDD\",\"0xA5\",\"0x03\",\"0x00\",\"0xFF\",\"0xFD\",\"0x77\"]",
                "tot": "bin"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1740,
        "y": 620,
        "wires": [
            [
                "eabf5f.91c5b0a"
            ]
        ]
    },
    {
        "id": "9e4453cb.f9f23",
        "type": "change",
        "z": "5d2cdab.b6afe24",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[\"0xDD\",\"0xA5\",\"0x04\",\"0x00\",\"0xFF\",\"0xFC\",\"0x77\"]",
                "tot": "bin"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 760,
        "wires": [
            [
                "4f15578e.becc08"
            ]
        ]
    },
    {
        "id": "9ff0269.ae421d8",
        "type": "serial request",
        "z": "5d2cdab.b6afe24",
        "name": "",
        "serial": "a11669f4.d68478",
        "x": 1190,
        "y": 760,
        "wires": [
            [
                "7d327ee2.c343b"
            ]
        ]
    },
    {
        "id": "83bb5ee0.41c08",
        "type": "change",
        "z": "5d2cdab.b6afe24",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[\"0xDD\",\"0xA5\",\"0x05\",\"0x00\",\"0xFF\",\"0xFB\",\"0x77\"]",
                "tot": "bin"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 880,
        "wires": [
            [
                "63427973.f4f928"
            ]
        ]
    },
    {
        "id": "63427973.f4f928",
        "type": "delay",
        "z": "5d2cdab.b6afe24",
        "name": "",
        "pauseType": "delay",
        "timeout": "60",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1010,
        "y": 880,
        "wires": [
            [
                "d4bca492.cd74f8"
            ]
        ]
    },
    {
        "id": "d4bca492.cd74f8",
        "type": "serial request",
        "z": "5d2cdab.b6afe24",
        "name": "",
        "serial": "a11669f4.d68478",
        "x": 1190,
        "y": 880,
        "wires": [
            [
                "cbd1355e.27f848"
            ]
        ]
    },
    {
        "id": "354b4a7.f584cb6",
        "type": "function",
        "z": "5d2cdab.b6afe24",
        "name": "",
        "func": "const BATT_AMP_HOURS = 400.0  //total amp-hours of battery bank\n\n//look for header before grabbing data\n//the third number is the frequency of the unit A=1, B=2, etc..\n//the forth number is the address\nvar header = [170, 28, 1, 17];  //Freq=A=1, Address = 17\nvar body = msg.payload;\n\nvar l1 = body[3];\nvar l2 = body[l1 + 10];\nvar l3 = body[l1 + l2 + 17];\nvar total_length = l1 + l2 + l3;\n//var la = body.length;\n// check to see line length is correct\nif(total_length + 21 != body.length)\n    return null;\n\n//verify string\nif(body[0] != 0xdd || \n    body[1] != 0x03 ||\n    body[l1 + 6] != 0x77 ||\n    body[l1 + 7] != 0xdd ||\n    body[l1 + 8] != 0x04 ||\n    body[l1 + l2 + 13] != 0x77 ||\n    body[l1 + l2 + 14] != 0xdd ||\n    body[l1 + l2 + 15] != 0x05 ||\n    body[l1 + l2 + l3 + 20] != 0x77)\n        return null;\n        \nvar chksum = body[l1 + 4] << 8 | body[l1 + 5];\n\nvar i;\nvar sum = 0;\nfor (i = 2; i < l1 + 4; i++) {\n  sum += body[i];\n}\nsum = (-sum>>>0)&0xffff;\nif(sum != chksum)\n    return null;\n\nchksum = body[l1 + l2 + 11] << 8 | body[l1 + l2 + 12];\nsum = 0;\nfor (i = l1 + 9; i < l1 + l2 + 11; i++) {\n  sum += body[i];\n}\nsum = (-sum>>>0)&0xffff;\nif(sum != chksum)\n    return null;\n\nchksum = body[l1 + l2 + l3 + 18] << 8 | body[l1 + l2 + l3 + 19];\nsum = 0;\nfor (i = l1 + l2 + 16; i < l1 + l2 + l3 + 18; i++) {\n  sum += body[i];\n}\nsum = (-sum>>>0)&0xffff;\nif(sum != chksum)\n    return null;\n\n\n\n\n// Voltage 4 * 256 + 5 as 16-bit unsigned\nvar voltage = body[4] << 8 | body[5];\nvoltage /= 100.0;\n\n// Current 6 * 256 + 7 as 16-bit signed\nvar current = body[6] << 8 | body[7];\nif (current & 0x8000) {\n    current = -((current ^ 0xFFFF) + 1);\n}\ncurrent /= 100.0;\n\n// Remaining Capacity \nvar remaining_capacity = body[8] << 8 | body[9];\nremaining_capacity /= 100.0;\n\n// Normal Capacity \nvar normal_capacity = body[8] << 8 | body[9];\nnormal_capacity /= 100.0;\n\n// Production Date \nvar prouction_date = body[10] << 8 | body[11];\n\n// Number of cycles \nvar num_cycles = body[12] << 8 | body[13];\n\n// Low Balance \nvar low_bal = body[14] << 8 | body[15];\n\n// High Balance \nvar high_bal = body[14] << 8 | body[15];\n\n// Protection status \nvar protection_status = body[16] << 8 | body[17];\n\n// software version\nvar software_version = body[22];\n\n// percent remaining capacity\nvar percent_remaining_cap = body[23];\n\n// MOS_state\nvar mos_state = body[24];\n\n// number of battery strings\nvar num_batteries = body[25];\n\nflow.set(\"Num_batteries\", num_batteries);\n\n// number of temperture probes\nvar num_temp_probes = body[26];\n\n// first temperature\nvar first_temperature = body[27] << 8 | body[28];\nfirst_temperature -= 2731;   //convert from absolute zero * 10\nfirst_temperature /= 10.0;\n\n\n// second temperature\nvar second_temperature = body[29] << 8 | body[30];\nsecond_temperature -= 2731;   //convert from absolute zero * 10\nsecond_temperature /= 10.0;\n\n// cell 1 voltage\nvar cell_voltage_1 = body[l1 + 11] << 8 | body[l1 + 12];\ncell_voltage_1 /= 1000.0;\n\n// cell 2 voltage\nvar cell_voltage_2 = body[l1 + 13] << 8 | body[l1 + 14];\ncell_voltage_2 /= 1000.0;\n\n// cell 3 voltage\nvar cell_voltage_3 = body[l1 + 15] << 8 | body[l1 + 16];\ncell_voltage_3 /= 1000.0;\n\n// cell 4 voltage\nvar cell_voltage_4 = body[l1 + 17] << 8 | body[l1 + 18];\ncell_voltage_4 /= 1000.0;\n\n\n\n\nmsg.payload = { voltage: voltage,\n                current: current,\n                remaining_capacity: remaining_capacity, \n                normal_capacity: normal_capacity,\n                num_cycles: num_cycles,\n                low_bal: low_bal,\n                high_bal: high_bal,\n                percent_remaining_cap: percent_remaining_cap,\n                mos_state: mos_state,\n                first_temperature: first_temperature,\n                second_temperature: second_temperature,\n                cell_voltage_1: cell_voltage_1,\n                cell_voltage_2: cell_voltage_2,\n                cell_voltage_3: cell_voltage_3,\n                cell_voltage_4: cell_voltage_4};\n                \n\n\n\n\n/*\n0: 0xdd\n1: 0x3\n2: 0x0\n3: 0x1b\n4: 0x4\n5: 0x64\n6: 0x0\n7: 0x0\n8: 0x0\n9: 0x0\n\n\nfor (i = 0; i < header.length; i++) {\n    if (header[i] != body[i]) {\n        return null;\n    }\n}\n\n// Voltage 4 * 256 + 5 as 16-bit unsigned\nvar voltage = body[4] << 8 | body[5];\nvoltage /= 100.0;\n\n// Current 6 * 256 + 7 as 16-bit signed\nvar current = body[6] << 8 | body[7];\nif (current & 0x8000) {\n    current = -((current ^ 0xFFFF) + 1);\n}\ncurrent /= 10.0;\n\n// Wattage 8..12 as 32-bit unsigned\nvar wattage = body[8] << 24 | \n              body[9] << 16 |\n              body[10] << 8 |\n              body[11];\nwattage /= 1000.0;\n\n// Amp Hours 12..16 as 32-bit unsigned\nvar amp_hrs = body[12] << 24 | \n              body[13] << 16 |\n              body[14] << 8 |\n              body[15];\namp_hrs /= 1000.0;\n\n// Watt Hours 16..20 as 32-bit unsigned\nvar watt_hrs = body[16] << 24 | \n               body[17] << 16 |\n               body[18] << 8 |\n               body[19];\nwatt_hrs /= 1000.0;\n\n// Seconds 20..24 as 32-bit unsigned\nvar time_s = body[20] << 24 | \n             body[21] << 16 |\n             body[22] << 8 |\n             body[23];\n\n// Status flag\nvar status_on = !(body[24]);\n\n// Temperature 25 as 8-bit signed\nvar temp = body[25];\nif (temp & 0x80) {\n    body = -((body ^ 0xFF) + 1);\n}\n\n// Batter state-of-charge\nvar batt_soc = (BATT_AMP_HOURS - amp_hrs) /\n               BATT_AMP_HOURS * 100.0;\n\nmsg.payload = { voltage: voltage,\n                current: current,\n                wattage: wattage,\n                amp_hrs: amp_hrs,\n                watt_hrs: watt_hrs,\n                time_s: time_s,\n                status_on: status_on,\n                temp: temp,\n                batt_soc: batt_soc };\n                */\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 1080,
        "wires": [
            [
                "fb710707.45c9a8"
            ]
        ]
    },
    {
        "id": "7d327ee2.c343b",
        "type": "switch",
        "z": "5d2cdab.b6afe24",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "istype",
                "v": "undefined",
                "vt": "undefined"
            },
            {
                "t": "istype",
                "v": "buffer",
                "vt": "buffer"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1350,
        "y": 760,
        "wires": [
            [
                "25c1e60a.286bea"
            ],
            [
                "83bb5ee0.41c08",
                "e01c5fb5.7e9f2"
            ]
        ]
    },
    {
        "id": "cbd1355e.27f848",
        "type": "switch",
        "z": "5d2cdab.b6afe24",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "istype",
                "v": "undefined",
                "vt": "undefined"
            },
            {
                "t": "istype",
                "v": "buffer",
                "vt": "buffer"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1350,
        "y": 880,
        "wires": [
            [
                "25c1e60a.286bea"
            ],
            [
                "e01c5fb5.7e9f2"
            ]
        ]
    },
    {
        "id": "d39b553e.d00148",
        "type": "debug",
        "z": "5d2cdab.b6afe24",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1590,
        "y": 1060,
        "wires": []
    },
    {
        "id": "e01c5fb5.7e9f2",
        "type": "join",
        "z": "5d2cdab.b6afe24",
        "name": "",
        "mode": "custom",
        "build": "buffer",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "",
        "joinerType": "bin",
        "accumulate": false,
        "timeout": "4",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1770,
        "y": 840,
        "wires": [
            [
                "354b4a7.f584cb6"
            ]
        ]
    },
    {
        "id": "65029bc0.bf0084",
        "type": "http request",
        "z": "5d2cdab.b6afe24",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8086/write?db=bms",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "basic",
        "x": 1390,
        "y": 980,
        "wires": [
            [
                "d39b553e.d00148"
            ]
        ]
    },
    {
        "id": "fb710707.45c9a8",
        "type": "function",
        "z": "5d2cdab.b6afe24",
        "name": "",
        "func": "data = msg.payload;\nvar cellsum = data.cell_voltage_1 + data.cell_voltage_2 + data.cell_voltage_3 + data.cell_voltage_4;\nfields = [\n    \"BMS BatteryVoltage=\" + data.voltage,\n    \"Current=\" + data.current,\n    \"RemainingCapacity=\" + data.remaining_capacity,\n    \"NormalCapacity=\" + data.normal_capacity,\n    \"BatteryTemperature=\" + data.first_temperature,\n    \"BMSTemperature=\" + data.second_temperature,\n    \"NumCycles=\" + data.num_cycles,\n    \"LowBal=\" + data.low_bal,\n    \"HighBal=\" + data.high_bal,\n    \"PercentRemainingCap=\" + data.percent_remaining_cap,\n    \"MosState=\" + data.mos_state,    \n    \"CellVolt1=\" + data.cell_voltage_1,\n    \"CellVolt2=\" + data.cell_voltage_2,\n    \"CellVolt3=\" + data.cell_voltage_3,\n    \"CellVolt4=\" + data.cell_voltage_4,\n    \"CellSum=\" + cellsum\n    ];\n    \nmsg.payload = fields.join();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1100,
        "y": 1080,
        "wires": [
            [
                "65029bc0.bf0084",
                "d39b553e.d00148"
            ]
        ]
    },
    {
        "id": "a11669f4.d68478",
        "type": "serial-port",
        "z": "",
        "serialport": "/dev/ttyBMS",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "0xDD",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "20",
        "bin": "bin",
        "out": "interbyte",
        "addchar": "",
        "responsetimeout": "2000"
    }
]