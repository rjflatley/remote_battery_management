[
    {
        "id": "6d0b569.5bc2fa8",
        "type": "tab",
        "label": "Weatherstation",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e825e4b7.c67308",
        "type": "serial in",
        "z": "6d0b569.5bc2fa8",
        "name": "",
        "serial": "6c550778.b7e778",
        "x": 540,
        "y": 320,
        "wires": [
            [
                "abf87c14.3ef4f"
            ]
        ]
    },
    {
        "id": "4b962df7.6717b4",
        "type": "serial out",
        "z": "6d0b569.5bc2fa8",
        "name": "",
        "serial": "6c550778.b7e778",
        "x": 1880,
        "y": 960,
        "wires": []
    },
    {
        "id": "f02925d8.69f128",
        "type": "inject",
        "z": "6d0b569.5bc2fa8",
        "name": "Output Off",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[36,80,65,77,84,88,44,48,13]",
        "payloadType": "bin",
        "x": 1240,
        "y": 1100,
        "wires": [
            [
                "4b962df7.6717b4"
            ]
        ]
    },
    {
        "id": "9de89392.7fbfe",
        "type": "inject",
        "z": "6d0b569.5bc2fa8",
        "name": "Output On",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[36,80,65,77,84,88,44,49,13]",
        "payloadType": "bin",
        "x": 1240,
        "y": 1220,
        "wires": [
            [
                "4b962df7.6717b4"
            ]
        ]
    },
    {
        "id": "1d7624e1.35bb5b",
        "type": "inject",
        "z": "6d0b569.5bc2fa8",
        "name": "38400 baud",
        "props": [
            {
                "p": "baudrate",
                "v": "38400",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 1230,
        "y": 1180,
        "wires": [
            [
                "4b962df7.6717b4"
            ]
        ]
    },
    {
        "id": "abf87c14.3ef4f",
        "type": "function",
        "z": "6d0b569.5bc2fa8",
        "name": "Detect Baud Mismatch",
        "func": "function isLineValid(line) {\n    if (line === null) {\n        return false;\n    }\n    if (line.length === 0) {\n        return true;\n    }\n    if (line.charAt(0) != '$') {\n        return false;\n    }\n    \n    var checksum = 0;\n    var i = 1;\n    for(; line.charAt(i) != '*' && i < line.length; ++i) {\n        checksum = checksum ^ line.charCodeAt(i);\n    }\n    if (i + 3 != line.length) {\n        return false;\n    }\n    \n    var hex = checksum.toString(16).toUpperCase();\n    \n    return line.substring(i + 1, i + 3) === hex;\n}\n\nconst MAX_INVALID = 256;\nvar message = context.get(\"msgBuffer\") + msg.payload;\n\nvar lines = message.split(\"\\r\\n\");\nmsg.payload = \"\";\nvar valid = true;\n\nfor (var i = 0; i < lines.length - 1; ++i) {\n    valid = valid && isLineValid(lines[i]);\n    msg.payload += lines[i] + \"\\r\\n\";\n}\n\nvar send = msg.payload.length > 0;\nif (lines.length > 0) {\n    var last = lines[lines.length - 1];\n    if (isLineValid(last)) {\n        msg.payload += last;\n        send = true;\n    } else if (last.length > MAX_INVALID) {\n        valid = false;\n        send = true;\n        msg.payload = last;\n        context.set(\"msgBuffer\", \"\");\n    } else {\n        context.set(\"msgBuffer\", last);\n    }\n}\n\nmsg.isValid = valid;\n\nif (send) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\ncontext.set(\"msgBuffer\", \"\")",
        "finalize": "",
        "x": 780,
        "y": 320,
        "wires": [
            [
                "e733e127.08f73",
                "d48d06b4.032128"
            ]
        ]
    },
    {
        "id": "e733e127.08f73",
        "type": "function",
        "z": "6d0b569.5bc2fa8",
        "name": "Threshold Count",
        "func": "var setBaud;\n\nvar count = context.get('count')||0;\n\nif (msg.isValid) {\n    // Message was valid, reset the count.\n    count = 0;\n    setBaud = false;\n} else {\n    count += 1;\n    if (count > 3) {\n        count = 0;\n        setBaud = true;\n    } else {\n        setBaud = false;\n    }\n}\n\ncontext.set('count',count);\n\nmsg.setBaud = setBaud;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "context.set('count',0);",
        "finalize": "",
        "x": 1010,
        "y": 220,
        "wires": [
            [
                "bcef37b0.176c38"
            ]
        ]
    },
    {
        "id": "90c21f0a.d23d1",
        "type": "inject",
        "z": "6d0b569.5bc2fa8",
        "name": "4800 baud",
        "props": [
            {
                "p": "baudrate",
                "v": "4800",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 1240,
        "y": 1260,
        "wires": [
            [
                "4b962df7.6717b4"
            ]
        ]
    },
    {
        "id": "71376952.1a31b8",
        "type": "inject",
        "z": "6d0b569.5bc2fa8",
        "name": "up baud",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[36,80,65,77,84,67,44,66,65,85,68,44,51,56,52,48,48,42,54,54,13]",
        "payloadType": "bin",
        "x": 1240,
        "y": 1140,
        "wires": [
            [
                "4b962df7.6717b4"
            ]
        ]
    },
    {
        "id": "6aaebdba.81c354",
        "type": "function",
        "z": "6d0b569.5bc2fa8",
        "name": "Output Off",
        "func": "msg.payload = \"PAMTX\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1030,
        "y": 540,
        "wires": [
            [
                "aa8c4fba.fb51b",
                "453f921c.65dfac"
            ]
        ]
    },
    {
        "id": "bcef37b0.176c38",
        "type": "change",
        "z": "6d0b569.5bc2fa8",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "isValid ",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 320,
        "wires": [
            [
                "a01fb885.25c758"
            ]
        ]
    },
    {
        "id": "9897fc1c.7388b",
        "type": "function",
        "z": "6d0b569.5bc2fa8",
        "name": "Set WS Baud",
        "func": "msg.payload = \"PAMTC,BAUD,38400\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1040,
        "y": 600,
        "wires": [
            [
                "27b0253f.f8f64a",
                "aa8c4fba.fb51b"
            ]
        ]
    },
    {
        "id": "453f921c.65dfac",
        "type": "delay",
        "z": "6d0b569.5bc2fa8",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 850,
        "y": 600,
        "wires": [
            [
                "9897fc1c.7388b"
            ]
        ]
    },
    {
        "id": "27b0253f.f8f64a",
        "type": "delay",
        "z": "6d0b569.5bc2fa8",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 840,
        "y": 660,
        "wires": [
            [
                "c955b7e6.11e0e8"
            ]
        ]
    },
    {
        "id": "aa8c4fba.fb51b",
        "type": "function",
        "z": "6d0b569.5bc2fa8",
        "name": "Format Message",
        "func": "var checksum = 0;\nfor(var i = 0; i < msg.payload.length; ++i) {\n    checksum = checksum ^ msg.payload.charCodeAt(i);\n}\n\nvar hex = checksum.toString(16).toUpperCase();\n\nmsg.payload = \"$\" + msg.payload + \"*\" + hex + \"\\r\\n\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1830,
        "y": 780,
        "wires": [
            [
                "4b962df7.6717b4"
            ]
        ]
    },
    {
        "id": "c955b7e6.11e0e8",
        "type": "function",
        "z": "6d0b569.5bc2fa8",
        "name": "Set Local Baud 38400",
        "func": "msg.payload = \"\";\nmsg.baudrate = 38400;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1060,
        "y": 660,
        "wires": [
            [
                "4b962df7.6717b4",
                "1f70619a.d0491e"
            ]
        ]
    },
    {
        "id": "e3833687.607b58",
        "type": "function",
        "z": "6d0b569.5bc2fa8",
        "name": "Output On",
        "func": "msg.payload = \"PAMTX,1\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1030,
        "y": 720,
        "wires": [
            [
                "aa8c4fba.fb51b",
                "46dcd38.398a42c"
            ]
        ]
    },
    {
        "id": "452a5365.7e547c",
        "type": "delay",
        "z": "6d0b569.5bc2fa8",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 850,
        "y": 720,
        "wires": [
            [
                "e3833687.607b58"
            ]
        ]
    },
    {
        "id": "fab29b8f.c03268",
        "type": "function",
        "z": "6d0b569.5bc2fa8",
        "name": "Set Local Baud 4800",
        "func": "msg.payload = \"\";\nmsg.baudrate = 4800;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1060,
        "y": 480,
        "wires": [
            [
                "4b962df7.6717b4",
                "76c4c777.0910f8"
            ]
        ]
    },
    {
        "id": "fba0ce4f.1a19f",
        "type": "delay",
        "z": "6d0b569.5bc2fa8",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 850,
        "y": 540,
        "wires": [
            [
                "6aaebdba.81c354"
            ]
        ]
    },
    {
        "id": "a01fb885.25c758",
        "type": "function",
        "z": "6d0b569.5bc2fa8",
        "name": "If setBaud",
        "func": "if (msg.setBaud) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1030,
        "y": 420,
        "wires": [
            [
                "fab29b8f.c03268"
            ]
        ]
    },
    {
        "id": "76c4c777.0910f8",
        "type": "change",
        "z": "6d0b569.5bc2fa8",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "baudrate",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 540,
        "wires": [
            [
                "fba0ce4f.1a19f"
            ]
        ]
    },
    {
        "id": "1f70619a.d0491e",
        "type": "change",
        "z": "6d0b569.5bc2fa8",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "baudrate",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 720,
        "wires": [
            [
                "452a5365.7e547c"
            ]
        ]
    },
    {
        "id": "32236c24.e9e774",
        "type": "debug",
        "z": "6d0b569.5bc2fa8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1590,
        "y": 520,
        "wires": []
    },
    {
        "id": "d48d06b4.032128",
        "type": "function",
        "z": "6d0b569.5bc2fa8",
        "name": "If isValid",
        "func": "if (msg.isValid) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1380,
        "y": 440,
        "wires": [
            [
                "8f76161d.382448"
            ]
        ]
    },
    {
        "id": "f115f98b.af52c8",
        "type": "function",
        "z": "6d0b569.5bc2fa8",
        "name": "Standard heading",
        "func": "msg.payload = \"PAMTC,EN,HDG,1,5\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1050,
        "y": 760,
        "wires": [
            [
                "aa8c4fba.fb51b",
                "8d8f1ec.dc38ae"
            ]
        ]
    },
    {
        "id": "46dcd38.398a42c",
        "type": "delay",
        "z": "6d0b569.5bc2fa8",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 850,
        "y": 760,
        "wires": [
            [
                "f115f98b.af52c8"
            ]
        ]
    },
    {
        "id": "8f5bd0ae.72acf",
        "type": "function",
        "z": "6d0b569.5bc2fa8",
        "name": "GNSS Satellites in view",
        "func": "msg.payload = \"PAMTC,EN,GSV,1,10\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1070,
        "y": 840,
        "wires": [
            [
                "aa8c4fba.fb51b",
                "a69fcd6c.54233"
            ]
        ]
    },
    {
        "id": "30727fe8.45c99",
        "type": "delay",
        "z": "6d0b569.5bc2fa8",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 850,
        "y": 840,
        "wires": [
            [
                "8f5bd0ae.72acf"
            ]
        ]
    },
    {
        "id": "8d8f1ec.dc38ae",
        "type": "delay",
        "z": "6d0b569.5bc2fa8",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 850,
        "y": 800,
        "wires": [
            [
                "2298b951.2bb096"
            ]
        ]
    },
    {
        "id": "2298b951.2bb096",
        "type": "function",
        "z": "6d0b569.5bc2fa8",
        "name": "Relative (Apparent) Wind Speed and Angle",
        "func": "msg.payload = \"PAMTC,EN,VWR,1,5\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1130,
        "y": 800,
        "wires": [
            [
                "30727fe8.45c99",
                "aa8c4fba.fb51b"
            ]
        ]
    },
    {
        "id": "a3dc2a6.8f819d8",
        "type": "function",
        "z": "6d0b569.5bc2fa8",
        "name": "Recommended Minimum Specific GNSS Data",
        "func": "msg.payload = \"PAMTC,EN,RMC,1,10\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1140,
        "y": 880,
        "wires": [
            [
                "aa8c4fba.fb51b",
                "e12fc776.0fb008"
            ]
        ]
    },
    {
        "id": "a69fcd6c.54233",
        "type": "delay",
        "z": "6d0b569.5bc2fa8",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 850,
        "y": 880,
        "wires": [
            [
                "a3dc2a6.8f819d8"
            ]
        ]
    },
    {
        "id": "264958df.9a13a8",
        "type": "function",
        "z": "6d0b569.5bc2fa8",
        "name": "Wind chill, heat indes and station pressure",
        "func": "msg.payload = \"PAMTC,EN,XDRA,1,10\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1130,
        "y": 960,
        "wires": [
            [
                "5af3f592.a7107c",
                "aa8c4fba.fb51b"
            ]
        ]
    },
    {
        "id": "7d9eddb0.9cd9a4",
        "type": "delay",
        "z": "6d0b569.5bc2fa8",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 850,
        "y": 960,
        "wires": [
            [
                "264958df.9a13a8"
            ]
        ]
    },
    {
        "id": "e12fc776.0fb008",
        "type": "delay",
        "z": "6d0b569.5bc2fa8",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 850,
        "y": 920,
        "wires": [
            [
                "ce6496a5.dd1f68"
            ]
        ]
    },
    {
        "id": "ce6496a5.dd1f68",
        "type": "function",
        "z": "6d0b569.5bc2fa8",
        "name": "GNSS DOP and Active Satellites",
        "func": "msg.payload = \"PAMTC,EN,GSA,1,10\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1090,
        "y": 920,
        "wires": [
            [
                "7d9eddb0.9cd9a4",
                "aa8c4fba.fb51b"
            ]
        ]
    },
    {
        "id": "5d9628e6.5d4718",
        "type": "function",
        "z": "6d0b569.5bc2fa8",
        "name": "Vessel attitude attitude (pitch and roll)",
        "func": "msg.payload = \"PAMTC,EN,XDRB,1,10\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1110,
        "y": 1000,
        "wires": [
            [
                "aa8c4fba.fb51b"
            ]
        ]
    },
    {
        "id": "5af3f592.a7107c",
        "type": "delay",
        "z": "6d0b569.5bc2fa8",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 850,
        "y": 1000,
        "wires": [
            [
                "5d9628e6.5d4718"
            ]
        ]
    },
    {
        "id": "8f76161d.382448",
        "type": "tcp out",
        "z": "6d0b569.5bc2fa8",
        "host": "",
        "port": "10110",
        "beserver": "server",
        "base64": false,
        "end": false,
        "name": "",
        "x": 1590,
        "y": 380,
        "wires": []
    },
    {
        "id": "6c550778.b7e778",
        "type": "serial-port",
        "z": "",
        "serialport": "/dev/ttyWeatherstation",
        "serialbaud": "38400",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "64",
        "bin": "false",
        "out": "count",
        "addchar": "",
        "responsetimeout": "2000"
    }
]